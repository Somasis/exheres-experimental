# Copyright 2015 Kylie McClain <somasis@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require github [ user='landley' tag="${PV}" ]
require alternatives

SUMMARY="A simple, BSD-licensed project which aims to provide all the
tools needed to turn an embedded system into a development environment."
DESCRIPTION="Toybox is a BSD-licensed system base which combines many of
the common command line utilities expected in a Linux system into a single
executable. It can be used as an alternative to Busybox or GNU coreutils."

SLOT="0"

HOMEPAGE="http://landley.net/${PN}"
DOWNLOADS="${HOMEPAGE}/downloads/${PNV}.tar.gz"

# NOTE(somasis)
#   asked Rob Landley in IRC, he says that it is essentially public domain,
#   but the license is derived from BSD. was told to use either.
LICENCES="|| ( BSD-2 public-domain )"

MYOPTIONS="
    static
"

DEPENDENCIES=""

# seems to act really strange with sydbox
RESTRICT=test

MAKE_PARAMS=(
    CPUS=${EXJOBS}
    V=2
    HOSTCC=$(exhost --tool-prefix)cc
)

src_prepare() {
    default
    edo cp -v "${FILES}"/config "${WORK}"/.config
}

src_configure() {
    yes '' | emake "${MAKE_PARAMS[@]}" oldconfig
}

src_compile() {
    emake "${MAKE_PARAMS[@]}"
    if option static;then
        mv "${PN}" "${PN}".dyn
        CFLAGS="${CFLAGS} -static" emake "${MAKE_PARAMS[@]}"
        mv "${PN}" "${PN}".static
        mv "${PN}".dyn "${PN}"
    fi
}

src_test() {
    esandbox allow_path /proc/self/exe
    emake "${MAKE_PARAMS[@]}" test
    esandbox disallow_path /proc/self/exe
}

src_install() {
    herebin "${PN}".'[' <<'EOF'
#!/bin/sh
exec test "$@"
EOF

    option static && dobin "${PN}".static
    option static && edo chmod 2755 "${IMAGE}"/usr/$(exhost --target)/bin/"${PN}".static
    dobin "${PN}"
    edo chmod 2755 "${IMAGE}"/usr/$(exhost --target)/bin/"${PN}"

    local coreutils=(
        base64 basename cat chgrp chmod chown chroot cksum comm cp cut date
        dd df dirname du echo env expand expr factor false fold head hostid
        id install kill link ln logname ls md5sum mkdir mkfifo mknod mktemp
        mv nice nl nohup nproc od paste printenv printf pwd readlink realpath
        rm rmdir sed seq sha1sum shred sleep sort split stat sync tac tail
        tee test time timeout touch tr true truncate tty uname uniq unlink
        wc who whoami yes
    )

    alternatives_for coreutils  ${PN} 100   \
        /usr/$(exhost --target)/bin/'['         /usr/$(exhost --target)/bin/${PN}.'['       \
        $(for prog in ${coreutils[@]};do echo /usr/$(exhost --target)/bin/${prog} /usr/$(exhost --target)/bin/toybox;done)
    alternatives_for grep       ${PN} 100   \
        /usr/$(exhost --target)/bin/egrep       /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/fgrep       /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/grep        /usr/$(exhost --target)/bin/toybox
    alternatives_for hostname   ${PN} 100   \
        /usr/$(exhost --target)/bin/hostname    /usr/$(exhost --target)/bin/toybox
    alternatives_for kmod-tools ${PN} 100   \
        /usr/$(exhost --target)/bin/insmod      /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/lsmod       /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/modinfo     /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/modprobe    /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/rmmod       /usr/$(exhost --target)/bin/toybox
    alternatives_for syslogd    ${PN} 100   \
        /usr/$(exhost --target)/bin/klogd       /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/syslogd     /usr/$(exhost --target)/bin/toybox
    alternatives_for sed        ${PN} 100   \
        /usr/$(exhost --target)/bin/sed         /usr/$(exhost --target)/bin/toybox
    alternatives_for uptime     ${PN} 100   \
        /usr/$(exhost --target)/bin/uptime      /usr/$(exhost --target)/bin/toybox

    emagicdocs
}

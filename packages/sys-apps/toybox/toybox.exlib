# Copyright 2015 Kylie McClain <somasis@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require github [ user='landley' tag="${PV}" ]
require alternatives toolchain-funcs

SUMMARY="A simple, BSD-licensed project which aims to provide all the
tools needed to turn an embedded system into a development environment."
DESCRIPTION="Toybox is a BSD-licensed system base which combines many of
the common command line utilities expected in a Linux system into a single
executable. It can be used as an alternative to Busybox or GNU coreutils."

SLOT="0"

HOMEPAGE="http://landley.net/${PN}"
ever is_scm || DOWNLOADS="${HOMEPAGE}/downloads/${PNV}.tar.gz"

# NOTE(somasis)
#   asked Rob Landley in IRC, he says that it is essentially public domain,
#   but the license is derived from BSD. was told to use either.
LICENCES="public-domain"

MYOPTIONS="static"

DEPENDENCIES=""

MAKE_PARAMS=(
    CPUS=${EXJOBS}
    V=2
    HOSTCC=$(exhost --tool-prefix)cc
    NOSTRIP=true
)

pkg_setup() {
    default
    if option static;then
        append-flags -static
        append-ldflags -static
    fi
}

src_prepare() {
    default
    edo cp -v "${FILES}"/config "${WORK}"/.config

    # NOTE(somasis) tests which fail due to sandboxing
    for util in lsattr modinfo mount renice ;do
        edo rm tests/${util}.test
    done
    edo sed \
            -e '/Hostname - Set/d'  \
            -i tests/hostname.test
}

src_configure() {
    yes '' | emake "${MAKE_PARAMS[@]}" oldconfig
}

src_compile() {
    emake "${MAKE_PARAMS[@]}"
}

src_test() {
    if exhost --is-native -q;then
        esandbox allow_path /proc/self/exe
        emake "${MAKE_PARAMS[@]}" test
        esandbox disallow_path /proc/self/exe
    else
        echo "cross compiling, skipping tests"
    fi
}

src_install() {
    herebin "${PN}".'[' <<'EOF'
#!/bin/sh
exec test "$@"
EOF

    dobin "${PN}"

    local coreutils=(
        base64 basename cat chgrp chmod chown chroot cksum comm cp cut date
        dd df dirname du echo env expand expr factor false fold head hostid
        id install kill link ln logname ls md5sum mkdir mkfifo mknod mktemp
        mv nice nl nohup nproc od paste printenv printf pwd readlink realpath
        rm rmdir seq sha1sum shred sleep sort split stat sync tac tail
        tee test time timeout touch tr true truncate tty uname uniq unlink
        wc who whoami yes
    )

    alternatives_for coreutils  ${PN} 100   \
        /usr/$(exhost --target)/bin/'['         /usr/$(exhost --target)/bin/${PN}.'['       \
        $(for prog in ${coreutils[@]};do echo /usr/$(exhost --target)/bin/${prog} /usr/$(exhost --target)/bin/toybox;done)
    #alternatives_for grep       ${PN} 100   \
    #    /usr/$(exhost --target)/bin/egrep       /usr/$(exhost --target)/bin/toybox  \
    #    /usr/$(exhost --target)/bin/fgrep       /usr/$(exhost --target)/bin/toybox  \
    #    /usr/$(exhost --target)/bin/grep        /usr/$(exhost --target)/bin/toybox
    alternatives_for hostname   ${PN} 100   \
        /usr/$(exhost --target)/bin/hostname    /usr/$(exhost --target)/bin/toybox
    alternatives_for kmod-tools ${PN} 100   \
        /usr/$(exhost --target)/bin/insmod      /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/lsmod       /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/modinfo     /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/modprobe    /usr/$(exhost --target)/bin/toybox  \
        /usr/$(exhost --target)/bin/rmmod       /usr/$(exhost --target)/bin/toybox
    alternatives_for sed        ${PN} 100   \
        /usr/$(exhost --target)/bin/sed         /usr/$(exhost --target)/bin/toybox
    alternatives_for uptime     ${PN} 100   \
        /usr/$(exhost --target)/bin/uptime      /usr/$(exhost --target)/bin/toybox

    emagicdocs
}
